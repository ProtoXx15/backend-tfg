# Generated by Django 5.0.4 on 2024-05-31 16:22

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entrenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('especialidad', models.CharField(choices=[(1, 'Boxeo'), (2, 'Musculación'), (3, 'Zumba'), (4, 'Yoga'), (5, 'Pilates')], default=2, max_length=100)),
                ('correo_electronico', models.EmailField(max_length=254)),
                ('número_de_teléfono', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='EquipoDeportivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[(1, 'Equipo de Boxeo'), (2, 'Equipo de Musculación'), (3, 'Equipo de Zumba'), (4, 'Equipo de Yoga'), (5, 'Equipo de Pilates')], default=2, max_length=100)),
                ('descripción', models.TextField()),
                ('estado', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Membresia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_de_membresia', models.CharField(max_length=100)),
                ('precio_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duracion', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_clase', models.CharField(choices=[(1, 'Clase de Boxeo'), (2, 'Clase de Musculación'), (3, 'Clase de Zumba'), (4, 'Clase de Yoga'), (5, 'Clase de Pilates')], default=2, max_length=100)),
                ('descripción', models.TextField()),
                ('capacidad_máxima', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('entrenador', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.entrenador')),
                ('equipo', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.equipodeportivo')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_de_nacimiento', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('membresia', models.ForeignKey(choices=[(1, 'Membresia Básica'), (2, 'Membresia Plus'), (3, 'Membresia Premium')], default=1, on_delete=django.db.models.deletion.CASCADE, to='api.membresia')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservaClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.CharField(default=django.utils.timezone.now)),
                ('horario', models.CharField(default=django.utils.timezone.now)),
                ('clase', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.clase')),
                ('usuario', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
